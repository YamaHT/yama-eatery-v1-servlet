package Business.Swing;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Business.Swing.Component.FeedbackPanel;
import Business.Swing.Component.Subcomponent.CustomScrollBarUI;
import Data.Model.Category;
import Data.Model.Feedback;
import Data.Model.ImageResource;
import Data.Model.Order;
import Data.Model.Product;
import Data.Repository.Admin.FeedbackRepository;
import Data.Repository.Admin.OrderRepository;
import Data.Repository.Admin.ProductRepository;
import Data.Repository.Admin.ResourceRepository;
import Utils.ImageUtils;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.time.YearMonth;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Le Phuoc Duy - CE181153
 */
public class Dashboard extends javax.swing.JFrame {

    ResourceRepository resourceRepository = new ResourceRepository();
    ProductRepository productRepository = new ProductRepository();
    FeedbackRepository feedbackRepository = new FeedbackRepository();
    OrderRepository orderRepository = new OrderRepository();

    byte[] image = null;

    public Dashboard() {
        initComponents();
        setFalseComponentInit();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Side_panel = new javax.swing.JPanel();
        general = new javax.swing.JPanel();
        general_highlight = new javax.swing.JPanel();
        general_label = new javax.swing.JLabel();
        product = new javax.swing.JPanel();
        product_highlight = new javax.swing.JPanel();
        product_label = new javax.swing.JLabel();
        order = new javax.swing.JPanel();
        order_highlight = new javax.swing.JPanel();
        order_label = new javax.swing.JLabel();
        resource = new javax.swing.JPanel();
        resource_highlight = new javax.swing.JPanel();
        resource_label = new javax.swing.JLabel();
        feedback = new javax.swing.JPanel();
        feedback_highlight = new javax.swing.JPanel();
        feedback_label = new javax.swing.JLabel();
        general_management = new javax.swing.JPanel();
        general_management_header = new javax.swing.JPanel();
        generalHeaderText = new javax.swing.JLabel();
        general_management_product = new javax.swing.JPanel();
        generalProductProgressBar = new javax.swing.JProgressBar();
        generalProductTitle = new javax.swing.JLabel();
        generalProductSold = new javax.swing.JLabel();
        generalProductGoals = new javax.swing.JLabel();
        general_management_revenue = new javax.swing.JPanel();
        generalRevenueProgressBar = new javax.swing.JProgressBar();
        generalRevenueTitle = new javax.swing.JLabel();
        generalRevenueReceived = new javax.swing.JLabel();
        generalRevenueGoals = new javax.swing.JLabel();
        general_management_most = new javax.swing.JPanel();
        general_management_most_header = new javax.swing.JLabel();
        general_management_most_title = new javax.swing.JPanel();
        title_id = new javax.swing.JLabel();
        title_name = new javax.swing.JLabel();
        title_image = new javax.swing.JLabel();
        title_price = new javax.swing.JLabel();
        title_category = new javax.swing.JLabel();
        title_sold = new javax.swing.JLabel();
        general_management_most_detail = new javax.swing.JPanel();
        detail_id = new javax.swing.JLabel();
        detail_name = new javax.swing.JLabel();
        detail_image = new javax.swing.JLabel();
        detail_price = new javax.swing.JLabel();
        detail_category = new javax.swing.JLabel();
        detail_sold = new javax.swing.JLabel();
        resource_management = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resourceTableData = new javax.swing.JTable();
        resource_management_action = new javax.swing.JPanel();
        resourceButtonAdd = new javax.swing.JButton();
        resourceButtonDelete = new javax.swing.JButton();
        resourceInputName = new javax.swing.JTextField();
        resourceInputFile = new javax.swing.JButton();
        resourceTextFile = new javax.swing.JTextField();
        product_management = new javax.swing.JPanel();
        product_management_action = new javax.swing.JPanel();
        productInputId = new javax.swing.JTextField();
        productInputName = new javax.swing.JTextField();
        productLineName = new javax.swing.JLabel();
        productTextImage1 = new javax.swing.JLabel();
        productTextImage2 = new javax.swing.JLabel();
        productInputImage = new javax.swing.JButton();
        productInputPrice = new javax.swing.JTextField();
        productLinePrice = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        productInputDescription = new javax.swing.JTextArea();
        productInputInventory = new javax.swing.JTextField();
        productLineInventory = new javax.swing.JLabel();
        productTextCategory = new javax.swing.JLabel();
        productInputCategory = new javax.swing.JComboBox<>();
        productButtonAdd = new javax.swing.JButton();
        productButtonUpdate = new javax.swing.JButton();
        productButtonSearch = new javax.swing.JButton();
        productButtonDelete = new javax.swing.JButton();
        productButtonClear = new javax.swing.JButton();
        product_management_table = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTableData = new javax.swing.JTable();
        feedback_management = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        feedbackTextPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        feedbackInputResponse = new javax.swing.JTextArea();
        feedbackButton = new javax.swing.JButton();
        order_management = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        orderTableData = new javax.swing.JTable();
        orderButtonAccept = new javax.swing.JButton();
        orderButtonRefuse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard management");
        setMinimumSize(new java.awt.Dimension(830, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Side_panel.setBackground(new java.awt.Color(23, 35, 51));
        Side_panel.setPreferredSize(new java.awt.Dimension(200, 500));

        general.setBackground(new java.awt.Color(23, 35, 51));
        general.setPreferredSize(new java.awt.Dimension(200, 50));
        general.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                generalMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                generalMouseReleased(evt);
            }
        });

        general_highlight.setBackground(new java.awt.Color(255, 255, 255));
        general_highlight.setForeground(new java.awt.Color(255, 255, 255));
        general_highlight.setPreferredSize(new java.awt.Dimension(4, 70));

        javax.swing.GroupLayout general_highlightLayout = new javax.swing.GroupLayout(general_highlight);
        general_highlight.setLayout(general_highlightLayout);
        general_highlightLayout.setHorizontalGroup(
            general_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        general_highlightLayout.setVerticalGroup(
            general_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        general_label.setBackground(new java.awt.Color(23, 35, 51));
        general_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        general_label.setForeground(java.awt.Color.white);
        general_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        general_label.setText("General");

        javax.swing.GroupLayout generalLayout = new javax.swing.GroupLayout(general);
        general.setLayout(generalLayout);
        generalLayout.setHorizontalGroup(
            generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalLayout.createSequentialGroup()
                .addComponent(general_highlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(general_label, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        generalLayout.setVerticalGroup(
            generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(general_highlight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(general_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        product.setBackground(new java.awt.Color(23, 35, 51));
        product.setForeground(new java.awt.Color(255, 255, 255));
        product.setPreferredSize(new java.awt.Dimension(200, 50));
        product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                productMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                productMouseReleased(evt);
            }
        });

        product_highlight.setBackground(new java.awt.Color(255, 255, 255));
        product_highlight.setForeground(new java.awt.Color(255, 255, 255));
        product_highlight.setPreferredSize(new java.awt.Dimension(3, 60));

        javax.swing.GroupLayout product_highlightLayout = new javax.swing.GroupLayout(product_highlight);
        product_highlight.setLayout(product_highlightLayout);
        product_highlightLayout.setHorizontalGroup(
            product_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        product_highlightLayout.setVerticalGroup(
            product_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        product_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        product_label.setForeground(new java.awt.Color(240, 240, 240));
        product_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        product_label.setText("Product");

        javax.swing.GroupLayout productLayout = new javax.swing.GroupLayout(product);
        product.setLayout(productLayout);
        productLayout.setHorizontalGroup(
            productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productLayout.createSequentialGroup()
                .addComponent(product_highlight, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(product_label, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        productLayout.setVerticalGroup(
            productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(product_highlight, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(product_label, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        order.setBackground(new java.awt.Color(23, 35, 51));
        order.setForeground(new java.awt.Color(255, 255, 255));
        order.setPreferredSize(new java.awt.Dimension(200, 50));
        order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                orderMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderMouseReleased(evt);
            }
        });

        order_highlight.setBackground(new java.awt.Color(255, 255, 255));
        order_highlight.setForeground(new java.awt.Color(255, 255, 255));
        order_highlight.setPreferredSize(new java.awt.Dimension(3, 60));

        javax.swing.GroupLayout order_highlightLayout = new javax.swing.GroupLayout(order_highlight);
        order_highlight.setLayout(order_highlightLayout);
        order_highlightLayout.setHorizontalGroup(
            order_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        order_highlightLayout.setVerticalGroup(
            order_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        order_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        order_label.setForeground(new java.awt.Color(240, 240, 240));
        order_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        order_label.setText("Order");

        javax.swing.GroupLayout orderLayout = new javax.swing.GroupLayout(order);
        order.setLayout(orderLayout);
        orderLayout.setHorizontalGroup(
            orderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderLayout.createSequentialGroup()
                .addComponent(order_highlight, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(order_label, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        orderLayout.setVerticalGroup(
            orderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(order_highlight, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(order_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        resource.setBackground(new java.awt.Color(23, 35, 51));
        resource.setForeground(new java.awt.Color(255, 255, 255));
        resource.setPreferredSize(new java.awt.Dimension(200, 50));
        resource.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resourceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resourceMouseReleased(evt);
            }
        });

        resource_highlight.setBackground(new java.awt.Color(255, 255, 255));
        resource_highlight.setForeground(new java.awt.Color(255, 255, 255));
        resource_highlight.setPreferredSize(new java.awt.Dimension(3, 60));

        javax.swing.GroupLayout resource_highlightLayout = new javax.swing.GroupLayout(resource_highlight);
        resource_highlight.setLayout(resource_highlightLayout);
        resource_highlightLayout.setHorizontalGroup(
            resource_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        resource_highlightLayout.setVerticalGroup(
            resource_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        resource_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        resource_label.setForeground(new java.awt.Color(240, 240, 240));
        resource_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resource_label.setText("Resource");

        javax.swing.GroupLayout resourceLayout = new javax.swing.GroupLayout(resource);
        resource.setLayout(resourceLayout);
        resourceLayout.setHorizontalGroup(
            resourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resourceLayout.createSequentialGroup()
                .addComponent(resource_highlight, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resource_label, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        resourceLayout.setVerticalGroup(
            resourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resource_highlight, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(resource_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        feedback.setBackground(new java.awt.Color(23, 35, 51));
        feedback.setForeground(new java.awt.Color(255, 255, 255));
        feedback.setPreferredSize(new java.awt.Dimension(200, 50));
        feedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                feedbackMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                feedbackMouseReleased(evt);
            }
        });

        feedback_highlight.setBackground(new java.awt.Color(255, 255, 255));
        feedback_highlight.setForeground(new java.awt.Color(255, 255, 255));
        feedback_highlight.setPreferredSize(new java.awt.Dimension(3, 60));

        javax.swing.GroupLayout feedback_highlightLayout = new javax.swing.GroupLayout(feedback_highlight);
        feedback_highlight.setLayout(feedback_highlightLayout);
        feedback_highlightLayout.setHorizontalGroup(
            feedback_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        feedback_highlightLayout.setVerticalGroup(
            feedback_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        feedback_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        feedback_label.setForeground(new java.awt.Color(240, 240, 240));
        feedback_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        feedback_label.setText("Feedback");

        javax.swing.GroupLayout feedbackLayout = new javax.swing.GroupLayout(feedback);
        feedback.setLayout(feedbackLayout);
        feedbackLayout.setHorizontalGroup(
            feedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackLayout.createSequentialGroup()
                .addComponent(feedback_highlight, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedback_label, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );
        feedbackLayout.setVerticalGroup(
            feedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedback_highlight, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(feedback_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Side_panelLayout = new javax.swing.GroupLayout(Side_panel);
        Side_panel.setLayout(Side_panelLayout);
        Side_panelLayout.setHorizontalGroup(
            Side_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Side_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(general, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(resource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Side_panelLayout.setVerticalGroup(
            Side_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Side_panelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(general, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );

        getContentPane().add(Side_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        general_management.setBackground(new java.awt.Color(102, 204, 255));
        general_management.setForeground(new java.awt.Color(255, 255, 0));
        general_management.setPreferredSize(new java.awt.Dimension(630, 500));

        general_management_header.setBackground(new java.awt.Color(51, 102, 255));
        general_management_header.setPreferredSize(new java.awt.Dimension(630, 50));

        generalHeaderText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        generalHeaderText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalHeaderText.setText("STATISTICS AND REPORT IN "+YearMonth.now().getMonth().toString() + " " + YearMonth.now().getYear() + " (" +YearMonth.now().getMonthValue() + "/" + YearMonth.now().getYear() + ")");

        javax.swing.GroupLayout general_management_headerLayout = new javax.swing.GroupLayout(general_management_header);
        general_management_header.setLayout(general_management_headerLayout);
        general_management_headerLayout.setHorizontalGroup(
            general_management_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generalHeaderText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        general_management_headerLayout.setVerticalGroup(
            general_management_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generalHeaderText, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        general_management_product.setBackground(new java.awt.Color(102, 204, 255));
        general_management_product.setPreferredSize(new java.awt.Dimension(630, 57));

        generalProductProgressBar.setBackground(new java.awt.Color(204, 255, 255));
        generalProductProgressBar.setForeground(new java.awt.Color(0, 0, 153));
        generalProductProgressBar.setToolTipText("");
        generalProductProgressBar.setValue(60);
        generalProductProgressBar.setBorder(null);
        generalProductProgressBar.setEnabled(false);
        generalProductProgressBar.setStringPainted(true);

        generalProductTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        generalProductTitle.setText("Total product:");

        generalProductSold.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        generalProductSold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalProductSold.setText("Sold: 300 products");

        generalProductGoals.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        generalProductGoals.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalProductGoals.setText("Goals: 500 products");

        javax.swing.GroupLayout general_management_productLayout = new javax.swing.GroupLayout(general_management_product);
        general_management_product.setLayout(general_management_productLayout);
        general_management_productLayout.setHorizontalGroup(
            general_management_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_productLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(generalProductTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(general_management_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generalProductProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(general_management_productLayout.createSequentialGroup()
                        .addComponent(generalProductSold, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(generalProductGoals, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        general_management_productLayout.setVerticalGroup(
            general_management_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_productLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_management_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(general_management_productLayout.createSequentialGroup()
                        .addComponent(generalProductProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(general_management_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generalProductSold)
                            .addComponent(generalProductGoals)))
                    .addComponent(generalProductTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        general_management_revenue.setBackground(new java.awt.Color(102, 204, 255));
        general_management_revenue.setPreferredSize(new java.awt.Dimension(630, 57));

        generalRevenueProgressBar.setBackground(new java.awt.Color(204, 255, 204));
        generalRevenueProgressBar.setForeground(new java.awt.Color(0, 204, 0));
        generalRevenueProgressBar.setToolTipText("");
        generalRevenueProgressBar.setValue(80);
        generalRevenueProgressBar.setBorder(null);
        generalRevenueProgressBar.setEnabled(false);
        generalRevenueProgressBar.setStringPainted(true);

        generalRevenueTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        generalRevenueTitle.setText("Total revenue:");

        generalRevenueReceived.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        generalRevenueReceived.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalRevenueReceived.setText("Received: $800");

        generalRevenueGoals.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        generalRevenueGoals.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalRevenueGoals.setText("Goals: $1000");

        javax.swing.GroupLayout general_management_revenueLayout = new javax.swing.GroupLayout(general_management_revenue);
        general_management_revenue.setLayout(general_management_revenueLayout);
        general_management_revenueLayout.setHorizontalGroup(
            general_management_revenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_revenueLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(generalRevenueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(general_management_revenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generalRevenueProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(general_management_revenueLayout.createSequentialGroup()
                        .addComponent(generalRevenueReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(generalRevenueGoals, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        general_management_revenueLayout.setVerticalGroup(
            general_management_revenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_revenueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_management_revenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(general_management_revenueLayout.createSequentialGroup()
                        .addComponent(generalRevenueProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(general_management_revenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generalRevenueReceived)
                            .addComponent(generalRevenueGoals)))
                    .addComponent(generalRevenueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        general_management_most.setBackground(new java.awt.Color(102, 204, 255));
        general_management_most.setPreferredSize(new java.awt.Dimension(630, 242));

        general_management_most_header.setBackground(new java.awt.Color(102, 204, 255));
        general_management_most_header.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        general_management_most_header.setForeground(new java.awt.Color(255, 0, 51));
        general_management_most_header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        general_management_most_header.setText("MOST SOLD PRODUCT");
        general_management_most_header.setPreferredSize(new java.awt.Dimension(630, 22));

        general_management_most_title.setBackground(new java.awt.Color(102, 204, 255));

        title_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_id.setForeground(new java.awt.Color(204, 0, 204));
        title_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_id.setText("Id");

        title_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_name.setForeground(new java.awt.Color(204, 0, 204));
        title_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_name.setText("Name");

        title_image.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_image.setForeground(new java.awt.Color(204, 0, 204));
        title_image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_image.setText("Image");

        title_price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_price.setForeground(new java.awt.Color(204, 0, 204));
        title_price.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_price.setText("Price");

        title_category.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_category.setForeground(new java.awt.Color(204, 0, 204));
        title_category.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_category.setText("Category");

        title_sold.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title_sold.setForeground(new java.awt.Color(204, 0, 204));
        title_sold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_sold.setText("Sold");

        javax.swing.GroupLayout general_management_most_titleLayout = new javax.swing.GroupLayout(general_management_most_title);
        general_management_most_title.setLayout(general_management_most_titleLayout);
        general_management_most_titleLayout.setHorizontalGroup(
            general_management_most_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_most_titleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_id, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_name, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_image, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_price, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_category, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_sold, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        general_management_most_titleLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {title_id, title_image, title_name, title_price});

        general_management_most_titleLayout.setVerticalGroup(
            general_management_most_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_most_titleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_management_most_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(title_id)
                    .addComponent(title_name)
                    .addComponent(title_image)
                    .addComponent(title_price)
                    .addComponent(title_category)
                    .addComponent(title_sold))
                .addGap(0, 0, 0))
        );

        general_management_most_titleLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {title_category, title_id, title_image, title_name, title_price});

        general_management_most_detail.setBackground(new java.awt.Color(102, 204, 255));
        general_management_most_detail.setPreferredSize(new java.awt.Dimension(600, 100));

        detail_id.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        detail_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_id.setPreferredSize(new java.awt.Dimension(98, 100));

        detail_name.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        detail_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_name.setPreferredSize(new java.awt.Dimension(98, 100));

        detail_image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_image.setText("");
        detail_image.setPreferredSize(new java.awt.Dimension(98, 100));

        detail_price.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        detail_price.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_price.setPreferredSize(new java.awt.Dimension(98, 100));

        detail_category.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        detail_category.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_category.setPreferredSize(new java.awt.Dimension(98, 100));

        detail_sold.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        detail_sold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        detail_sold.setPreferredSize(new java.awt.Dimension(98, 100));

        javax.swing.GroupLayout general_management_most_detailLayout = new javax.swing.GroupLayout(general_management_most_detail);
        general_management_most_detail.setLayout(general_management_most_detailLayout);
        general_management_most_detailLayout.setHorizontalGroup(
            general_management_most_detailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_most_detailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detail_id, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detail_name, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detail_image, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detail_price, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detail_category, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detail_sold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        general_management_most_detailLayout.setVerticalGroup(
            general_management_most_detailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_most_detailLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(general_management_most_detailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(detail_sold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail_category, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail_price, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail_image, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout general_management_mostLayout = new javax.swing.GroupLayout(general_management_most);
        general_management_most.setLayout(general_management_mostLayout);
        general_management_mostLayout.setHorizontalGroup(
            general_management_mostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(general_management_most_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(general_management_most_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(general_management_most_detail, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        general_management_mostLayout.setVerticalGroup(
            general_management_mostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_management_mostLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(general_management_most_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(general_management_most_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(general_management_most_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout general_managementLayout = new javax.swing.GroupLayout(general_management);
        general_management.setLayout(general_managementLayout);
        general_managementLayout.setHorizontalGroup(
            general_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(general_management_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(general_management_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(general_management_most, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(general_management_revenue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        general_managementLayout.setVerticalGroup(
            general_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_managementLayout.createSequentialGroup()
                .addComponent(general_management_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(general_management_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(general_management_revenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(general_management_most, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        getContentPane().add(general_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        jScrollPane1.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane1.setPreferredSize(new java.awt.Dimension(630, 300));

        resourceTableData.setBackground(new java.awt.Color(242, 242, 242));
        resourceTableData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resourceTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Name", "Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Byte.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resourceTableData.setFocusable(false);
        resourceTableData.setRequestFocusEnabled(false);
        resourceTableData.setRowHeight(50);
        resourceTableData.setSelectionBackground(new java.awt.Color(232, 57, 95));
        resourceTableData.setSelectionForeground(new java.awt.Color(255, 255, 255));
        resourceTableData.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(resourceTableData);
        if (resourceTableData.getColumnModel().getColumnCount() > 0) {
            resourceTableData.getColumnModel().getColumn(0).setResizable(false);
            resourceTableData.getColumnModel().getColumn(0).setPreferredWidth(20);
            resourceTableData.getColumnModel().getColumn(1).setResizable(false);
            resourceTableData.getColumnModel().getColumn(2).setResizable(false);
        }

        resource_management_action.setPreferredSize(new java.awt.Dimension(630, 150));

        resourceButtonAdd.setBackground(new java.awt.Color(102, 255, 102));
        resourceButtonAdd.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        resourceButtonAdd.setText("Add");
        resourceButtonAdd.setBorder(null);
        resourceButtonAdd.setFocusPainted(false);
        resourceButtonAdd.setPreferredSize(new java.awt.Dimension(200, 60));
        resourceButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resourceButtonAddActionPerformed(evt);
            }
        });

        resourceButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        resourceButtonDelete.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        resourceButtonDelete.setText("Delete");
        resourceButtonDelete.setBorder(null);
        resourceButtonDelete.setFocusPainted(false);
        resourceButtonDelete.setPreferredSize(new java.awt.Dimension(200, 60));
        resourceButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resourceButtonDeleteActionPerformed(evt);
            }
        });

        resourceInputName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resourceInputName.setForeground(new java.awt.Color(204, 204, 204));
        resourceInputName.setText("Resource name");
        resourceInputName.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        resourceInputName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                resourceInputNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                resourceInputNameFocusLost(evt);
            }
        });

        resourceInputFile.setBackground(new java.awt.Color(204, 204, 204));
        resourceInputFile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        resourceInputFile.setForeground(new java.awt.Color(102, 102, 102));
        resourceInputFile.setText("Choose File");
        resourceInputFile.setBorder(null);
        resourceInputFile.setFocusPainted(false);
        resourceInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resourceInputFileActionPerformed(evt);
            }
        });

        resourceTextFile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resourceTextFile.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        resourceTextFile.setFocusable(false);
        resourceTextFile.setPreferredSize(new java.awt.Dimension(250, 60));
        resourceTextFile.setRequestFocusEnabled(false);

        javax.swing.GroupLayout resource_management_actionLayout = new javax.swing.GroupLayout(resource_management_action);
        resource_management_action.setLayout(resource_management_actionLayout);
        resource_management_actionLayout.setHorizontalGroup(
            resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resource_management_actionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resource_management_actionLayout.createSequentialGroup()
                        .addComponent(resourceInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resourceTextFile, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resourceInputName))
                .addGap(33, 33, 33)
                .addGroup(resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resourceButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resourceButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        resource_management_actionLayout.setVerticalGroup(
            resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resource_management_actionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resourceButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(resource_management_actionLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(resourceInputName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(resource_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resourceInputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resourceButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resourceTextFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout resource_managementLayout = new javax.swing.GroupLayout(resource_management);
        resource_management.setLayout(resource_managementLayout);
        resource_managementLayout.setHorizontalGroup(
            resource_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(resource_management_action, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        resource_managementLayout.setVerticalGroup(
            resource_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resource_managementLayout.createSequentialGroup()
                .addComponent(resource_management_action, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        getContentPane().add(resource_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 630, 500));

        product_management.setPreferredSize(new java.awt.Dimension(630, 500));

        product_management_action.setBackground(new java.awt.Color(255, 255, 255));
        product_management_action.setPreferredSize(new java.awt.Dimension(230, 500));

        productInputId.setEditable(false);
        productInputId.setBackground(new java.awt.Color(255, 255, 255));
        productInputId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputId.setForeground(new java.awt.Color(153, 153, 153));
        productInputId.setText("Id");
        productInputId.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(Color.BLACK, 1), BorderFactory.createEmptyBorder(5, 10, 5, 10)));
        productInputId.setFocusable(false);
        productInputId.setPreferredSize(new java.awt.Dimension(218, 30));
        productInputId.setRequestFocusEnabled(false);

        productInputName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputName.setForeground(new java.awt.Color(204, 204, 204));
        productInputName.setText("Name");
        productInputName.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        productInputName.setMinimumSize(new java.awt.Dimension(218, 30));
        productInputName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productInputNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productInputNameFocusLost(evt);
            }
        });

        productLineName.setBackground(new java.awt.Color(0, 0, 0));
        productLineName.setToolTipText("");
        productLineName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        productLineName.setPreferredSize(new java.awt.Dimension(218, 2));

        productTextImage1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productTextImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productTextImage1.setText("Image:");

        productTextImage2.setBackground(new java.awt.Color(204, 204, 204));
        productTextImage2.setForeground(new java.awt.Color(204, 204, 204));
        productTextImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productTextImage2.setOpaque(true);
        productTextImage2.setPreferredSize(new java.awt.Dimension(70, 50));

        productInputImage.setBackground(new java.awt.Color(204, 153, 255));
        productInputImage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputImage.setText("Browse");
        productInputImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productInputImage.setFocusPainted(false);
        productInputImage.setPreferredSize(new java.awt.Dimension(38, 30));
        productInputImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productInputImageActionPerformed(evt);
            }
        });

        productInputPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputPrice.setForeground(new java.awt.Color(204, 204, 204));
        productInputPrice.setText("Price");
        productInputPrice.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        productInputPrice.setMinimumSize(new java.awt.Dimension(218, 30));
        productInputPrice.setPreferredSize(new java.awt.Dimension(218, 30));
        productInputPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productInputPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productInputPriceFocusLost(evt);
            }
        });

        productLinePrice.setBackground(new java.awt.Color(0, 0, 0));
        productLinePrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        productLinePrice.setPreferredSize(new java.awt.Dimension(218, 2));

        jScrollPane3.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        productInputDescription.setColumns(10);
        productInputDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputDescription.setForeground(new java.awt.Color(204, 204, 204));
        productInputDescription.setRows(4);
        productInputDescription.setText("Description");
        productInputDescription.setWrapStyleWord(true);
        productInputDescription.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        productInputDescription.setPreferredSize(new java.awt.Dimension(210, 72));
        productInputDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productInputDescriptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productInputDescriptionFocusLost(evt);
            }
        });
        jScrollPane3.setViewportView(productInputDescription);

        productInputInventory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInputInventory.setForeground(new java.awt.Color(204, 204, 204));
        productInputInventory.setText("Inventory");
        productInputInventory.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        productInputInventory.setPreferredSize(new java.awt.Dimension(218, 30));
        productInputInventory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productInputInventoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productInputInventoryFocusLost(evt);
            }
        });

        productLineInventory.setBackground(new java.awt.Color(0, 0, 0));
        productLineInventory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        productLineInventory.setPreferredSize(new java.awt.Dimension(218, 2));

        productTextCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productTextCategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productTextCategory.setText("Category:");
        productTextCategory.setPreferredSize(new java.awt.Dimension(55, 30));

        productInputCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        List<Category> list = productRepository.getAllCategory();
        String[] str = new String[list.size() + 1];
        str[0] = "";
        for (int i = 0; i < list.size(); i++) {
            str[i+1] = list.get(i).getName();
        }
        productInputCategory.setModel(new javax.swing.DefaultComboBoxModel<>(str));

        productButtonAdd.setBackground(new java.awt.Color(0, 204, 255));
        productButtonAdd.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        productButtonAdd.setForeground(new java.awt.Color(51, 51, 51));
        productButtonAdd.setText("Add");
        productButtonAdd.setBorder(null);
        productButtonAdd.setBorderPainted(false);
        productButtonAdd.setFocusPainted(false);
        productButtonAdd.setPreferredSize(new java.awt.Dimension(109, 30));
        productButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonAddActionPerformed(evt);
            }
        });

        productButtonUpdate.setBackground(new java.awt.Color(51, 255, 51));
        productButtonUpdate.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        productButtonUpdate.setForeground(new java.awt.Color(51, 51, 51));
        productButtonUpdate.setText("Update");
        productButtonUpdate.setBorder(null);
        productButtonUpdate.setBorderPainted(false);
        productButtonUpdate.setFocusPainted(false);
        productButtonUpdate.setPreferredSize(new java.awt.Dimension(109, 30));
        productButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonUpdateActionPerformed(evt);
            }
        });

        productButtonSearch.setBackground(new java.awt.Color(255, 255, 102));
        productButtonSearch.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        productButtonSearch.setForeground(new java.awt.Color(51, 51, 51));
        productButtonSearch.setText("Search/Get All");
        productButtonSearch.setBorder(null);
        productButtonSearch.setBorderPainted(false);
        productButtonSearch.setFocusPainted(false);
        productButtonSearch.setPreferredSize(new java.awt.Dimension(109, 30));
        productButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonSearchActionPerformed(evt);
            }
        });

        productButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        productButtonDelete.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        productButtonDelete.setForeground(new java.awt.Color(51, 51, 51));
        productButtonDelete.setText("Delete");
        productButtonDelete.setBorder(null);
        productButtonDelete.setBorderPainted(false);
        productButtonDelete.setFocusPainted(false);
        productButtonDelete.setPreferredSize(new java.awt.Dimension(109, 30));
        productButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonDeleteActionPerformed(evt);
            }
        });

        productButtonClear.setBackground(new java.awt.Color(153, 153, 153));
        productButtonClear.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        productButtonClear.setText("Clear Input");
        productButtonClear.setBorder(null);
        productButtonClear.setFocusPainted(false);
        productButtonClear.setPreferredSize(new java.awt.Dimension(218, 30));
        productButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout product_management_actionLayout = new javax.swing.GroupLayout(product_management_action);
        product_management_action.setLayout(product_management_actionLayout);
        product_management_actionLayout.setHorizontalGroup(
            product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(product_management_actionLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(product_management_actionLayout.createSequentialGroup()
                        .addComponent(productTextCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productInputCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(productInputId, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productLineName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(product_management_actionLayout.createSequentialGroup()
                        .addComponent(productTextImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(productTextImage2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(productInputImage, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(productInputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productLinePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productLineInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(product_management_actionLayout.createSequentialGroup()
                        .addComponent(productButtonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(productButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(product_management_actionLayout.createSequentialGroup()
                        .addComponent(productButtonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(productButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(productInputInventory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(productButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        product_management_actionLayout.setVerticalGroup(
            product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(product_management_actionLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(productInputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(productInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(productLineName, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productTextImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productTextImage2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productInputImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(productInputPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(productLinePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(productInputInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(productLineInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productTextCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productInputCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(product_management_actionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(productButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        product_management_table.setBackground(new java.awt.Color(255, 255, 255));
        product_management_table.setPreferredSize(new java.awt.Dimension(400, 500));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(630, 300));
        jScrollPane2.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        productTableData.setBackground(new java.awt.Color(242, 242, 242));
        productTableData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Image", "Price", "Description", "Inventory", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Byte.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTableData.setFocusable(false);
        productTableData.setRequestFocusEnabled(false);
        productTableData.setRowHeight(50);
        productTableData.setSelectionBackground(new java.awt.Color(232, 57, 95));
        productTableData.setSelectionForeground(new java.awt.Color(255, 255, 255));
        productTableData.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(productTableData);
        if (productTableData.getColumnModel().getColumnCount() > 0) {
            productTableData.getColumnModel().getColumn(0).setResizable(false);
            productTableData.getColumnModel().getColumn(0).setPreferredWidth(20);
            productTableData.getColumnModel().getColumn(1).setResizable(false);
            productTableData.getColumnModel().getColumn(2).setResizable(false);
            productTableData.getColumnModel().getColumn(3).setResizable(false);
            productTableData.getColumnModel().getColumn(4).setResizable(false);
            productTableData.getColumnModel().getColumn(5).setResizable(false);
            productTableData.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout product_management_tableLayout = new javax.swing.GroupLayout(product_management_table);
        product_management_table.setLayout(product_management_tableLayout);
        product_management_tableLayout.setHorizontalGroup(
            product_management_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(product_management_tableLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        product_management_tableLayout.setVerticalGroup(
            product_management_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(product_management_tableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout product_managementLayout = new javax.swing.GroupLayout(product_management);
        product_management.setLayout(product_managementLayout);
        product_managementLayout.setHorizontalGroup(
            product_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, product_managementLayout.createSequentialGroup()
                .addComponent(product_management_action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(product_management_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        product_managementLayout.setVerticalGroup(
            product_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(product_management_table, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(product_management_action, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(product_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 630, 500));

        jScrollPane4.setBorder(null);
        jScrollPane4.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane4.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setAutoscrolls(true);

        feedbackTextPanel.setBackground(new java.awt.Color(255, 255, 255));
        feedbackTextPanel.setAutoscrolls(true);
        feedbackTextPanel.setPreferredSize(new java.awt.Dimension(630, 350));

        javax.swing.GroupLayout feedbackTextPanelLayout = new javax.swing.GroupLayout(feedbackTextPanel);
        feedbackTextPanel.setLayout(feedbackTextPanelLayout);
        feedbackTextPanelLayout.setHorizontalGroup(
            feedbackTextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );
        feedbackTextPanelLayout.setVerticalGroup(
            feedbackTextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(feedbackTextPanel);

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane5.getVerticalScrollBar().setUnitIncrement(15);
        jScrollPane5.setAutoscrolls(true);
        jScrollPane5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        feedbackInputResponse.setColumns(20);
        feedbackInputResponse.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        feedbackInputResponse.setLineWrap(true);
        feedbackInputResponse.setRows(4);
        feedbackInputResponse.setWrapStyleWord(true);
        feedbackInputResponse.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jScrollPane5.setViewportView(feedbackInputResponse);

        feedbackButton.setBackground(new java.awt.Color(51, 153, 255));
        feedbackButton.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        feedbackButton.setForeground(new java.awt.Color(255, 255, 0));
        feedbackButton.setText("Send response");
        feedbackButton.setBorder(null);
        feedbackButton.setFocusPainted(false);
        feedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout feedback_managementLayout = new javax.swing.GroupLayout(feedback_management);
        feedback_management.setLayout(feedback_managementLayout);
        feedback_managementLayout.setHorizontalGroup(
            feedback_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(feedback_managementLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(feedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        feedback_managementLayout.setVerticalGroup(
            feedback_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedback_managementLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(feedback_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(feedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 53, Short.MAX_VALUE))
        );

        getContentPane().add(feedback_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 630, 500));

        order_management.setPreferredSize(new java.awt.Dimension(630, 500));

        jScrollPane6.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        orderTableData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        orderTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Quantity", "Total", "OrderDate", "Address", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTableData.setRowHeight(40);
        orderTableData.setSelectionBackground(new java.awt.Color(232, 57, 95));
        jScrollPane6.setViewportView(orderTableData);
        if (orderTableData.getColumnModel().getColumnCount() > 0) {
            orderTableData.getColumnModel().getColumn(0).setResizable(false);
            orderTableData.getColumnModel().getColumn(1).setResizable(false);
            orderTableData.getColumnModel().getColumn(2).setResizable(false);
            orderTableData.getColumnModel().getColumn(3).setResizable(false);
            orderTableData.getColumnModel().getColumn(4).setResizable(false);
            orderTableData.getColumnModel().getColumn(5).setResizable(false);
            orderTableData.getColumnModel().getColumn(6).setResizable(false);
        }

        orderButtonAccept.setBackground(new java.awt.Color(0, 255, 51));
        orderButtonAccept.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        orderButtonAccept.setText("ACCEPT");
        orderButtonAccept.setBorder(null);
        orderButtonAccept.setFocusPainted(false);
        orderButtonAccept.setPreferredSize(new java.awt.Dimension(300, 50));
        orderButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonAcceptActionPerformed(evt);
            }
        });

        orderButtonRefuse.setBackground(new java.awt.Color(255, 51, 51));
        orderButtonRefuse.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        orderButtonRefuse.setText("REFUSE");
        orderButtonRefuse.setBorder(null);
        orderButtonRefuse.setFocusPainted(false);
        orderButtonRefuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonRefuseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout order_managementLayout = new javax.swing.GroupLayout(order_management);
        order_management.setLayout(order_managementLayout);
        order_managementLayout.setHorizontalGroup(
            order_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(order_managementLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(orderButtonAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(orderButtonRefuse, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        order_managementLayout.setVerticalGroup(
            order_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(order_managementLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(order_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(orderButtonAccept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderButtonRefuse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getContentPane().add(order_management, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 630, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void orderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderMousePressed
        setColor(order);
        order_highlight.setOpaque(true);
        resetColor(new JPanel[]{product, resource, feedback, general}, new JPanel[]{product_highlight, resource_highlight, feedback_highlight, general_highlight});
    }//GEN-LAST:event_orderMousePressed

    private void orderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderMouseReleased
        setColor(order);
        order_management.setVisible(true);
        setOrderData();
        resource_management.setVisible(false);
        general_management.setVisible(false);
        product_management.setVisible(false);
        feedback_management.setVisible(false);
        resetColor(new JPanel[]{product, resource, feedback, general}, new JPanel[]{product_highlight, resource_highlight, feedback_highlight, general_highlight});
    }//GEN-LAST:event_orderMouseReleased

    private void resourceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resourceMousePressed
        setColor(resource);
        resource_highlight.setOpaque(true);
        resetColor(new JPanel[]{product, order, feedback, general}, new JPanel[]{product_highlight, order_highlight, feedback_highlight, general_highlight});
    }//GEN-LAST:event_resourceMousePressed

    private void resourceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resourceMouseReleased
        setColor(resource);
        resetColor(new JPanel[]{product, order, feedback, general}, new JPanel[]{product_highlight, order_highlight, feedback_highlight, general_highlight});
        resource_management.setVisible(true);
        setImageResourceData();
        general_management.setVisible(false);
        product_management.setVisible(false);
        order_management.setVisible(false);
        feedback_management.setVisible(false);
    }//GEN-LAST:event_resourceMouseReleased

    private void productMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productMousePressed
        setColor(product);
        product_highlight.setOpaque(true);
        resetColor(new JPanel[]{resource, order, feedback, general}, new JPanel[]{general_highlight, resource_highlight, order_highlight, feedback_highlight});
    }//GEN-LAST:event_productMousePressed

    private void productMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productMouseReleased
        setColor(product);
        resetColor(new JPanel[]{resource, order, feedback, general}, new JPanel[]{general_highlight, resource_highlight, order_highlight, feedback_highlight});
        product_management.setVisible(true);
        setProductData(productRepository.getAllProduct());
        general_management.setVisible(false);
        order_management.setVisible(false);
        feedback_management.setVisible(false);
        resource_management.setVisible(false);
    }//GEN-LAST:event_productMouseReleased

    private void feedbackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackMousePressed
        setColor(feedback);
        feedback_highlight.setOpaque(true);
        resetColor(new JPanel[]{product, resource, order, general}, new JPanel[]{general_highlight, product_highlight, resource_highlight, order_highlight});

    }//GEN-LAST:event_feedbackMousePressed

    private void feedbackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackMouseReleased
        setFeedbackData();
        setColor(feedback);
        resetColor(new JPanel[]{product, order, resource, general}, new JPanel[]{general_highlight, product_highlight, order_highlight, resource_highlight});
        feedback_management.setVisible(true);
        resource_management.setVisible(false);
        general_management.setVisible(false);
        product_management.setVisible(false);
        order_management.setVisible(false);
    }//GEN-LAST:event_feedbackMouseReleased

    private void generalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generalMousePressed
        setColor(general);
        general_highlight.setOpaque(true);
        resetColor(new JPanel[]{product, resource, order, feedback}, new JPanel[]{feedback_highlight, product_highlight, resource_highlight, order_highlight});
    }//GEN-LAST:event_generalMousePressed

    private void generalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generalMouseReleased
        setColor(general);
        resetColor(new JPanel[]{feedback, product, order, resource}, new JPanel[]{feedback_highlight, product_highlight, order_highlight, resource_highlight});
        general_management.setVisible(true);
        setGeneralData();
        order_management.setVisible(false);
        product_management.setVisible(false);
        feedback_management.setVisible(false);
        resource_management.setVisible(false);
    }//GEN-LAST:event_generalMouseReleased

    private void resourceInputNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resourceInputNameFocusGained
        if (resourceInputName.getText().equals("Resource name")) {
            resourceInputName.setText("");
            resourceInputName.setForeground(Color.black);
        }
    }//GEN-LAST:event_resourceInputNameFocusGained

    private void resourceInputNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resourceInputNameFocusLost
        if (resourceInputName.getText().isEmpty()) {
            resourceInputName.setText("Resource name");
            resourceInputName.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_resourceInputNameFocusLost

    private void resourceInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resourceInputFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "png");
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setAcceptAllFileFilterUsed(false);
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                image = Files.readAllBytes(file.toPath());
                resourceTextFile.setText(file.getName());
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_resourceInputFileActionPerformed

    private void resourceButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resourceButtonAddActionPerformed
        if (!resourceInputName.getText().equals("Resource name") && image != null) {
            resourceRepository.upload(resourceInputName.getText(), ImageUtils.compressImageFromWinform(image));
            resourceInputName.setText("Resource name");
            resourceInputName.setForeground(new Color(204, 204, 204));
            resourceTextFile.setText("");
            image = null;
            setImageResourceData();
        }
    }//GEN-LAST:event_resourceButtonAddActionPerformed

    private void resourceButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resourceButtonDeleteActionPerformed
        if (resourceTableData.getSelectedRow() != -1) {
            String name = resourceTableData.getValueAt(resourceTableData.getSelectedRow(), 1).toString();
            resourceRepository.delete(name);
            resourceInputName.setText("Resource name");
            resourceInputName.setForeground(new Color(204, 204, 204));
            setImageResourceData();
        }
    }//GEN-LAST:event_resourceButtonDeleteActionPerformed

    private void productInputImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productInputImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "png");
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setAcceptAllFileFilterUsed(false);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                image = Files.readAllBytes(file.toPath());
                productTextImage2.setIcon(
                        new ImageIcon(ImageUtils.convertByteToImage(image).getScaledInstance(70, 50, Image.SCALE_SMOOTH))
                );
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_productInputImageActionPerformed

    private void productInputNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputNameFocusGained
        if (productInputName.getText().equals("Name")) {
            productInputName.setText("");
            productInputName.setForeground(Color.black);
        }
    }//GEN-LAST:event_productInputNameFocusGained

    private void productInputNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputNameFocusLost
        if (productInputName.getText().isEmpty()) {
            productInputName.setText("Name");
            productInputName.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_productInputNameFocusLost

    private void productInputPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputPriceFocusGained
        if (productInputPrice.getText().equals("Price")) {
            productInputPrice.setText("");
            productInputPrice.setForeground(Color.black);
        }
    }//GEN-LAST:event_productInputPriceFocusGained

    private void productInputPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputPriceFocusLost
        if (productInputPrice.getText().isEmpty()) {
            productInputPrice.setText("Price");
            productInputPrice.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_productInputPriceFocusLost

    private void productInputDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputDescriptionFocusGained
        if (productInputDescription.getText().equals("Description")) {
            productInputDescription.setText("");
            productInputDescription.setForeground(Color.black);
        }
    }//GEN-LAST:event_productInputDescriptionFocusGained

    private void productInputDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputDescriptionFocusLost
        if (productInputDescription.getText().isEmpty()) {
            productInputDescription.setText("Description");
            productInputDescription.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_productInputDescriptionFocusLost

    private void productInputInventoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputInventoryFocusGained
        if (productInputInventory.getText().equals("Inventory")) {
            productInputInventory.setText("");
            productInputInventory.setForeground(Color.black);
        }
    }//GEN-LAST:event_productInputInventoryFocusGained

    private void productInputInventoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productInputInventoryFocusLost
        if (productInputInventory.getText().isEmpty()) {
            productInputInventory.setText("Inventory");
            productInputInventory.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_productInputInventoryFocusLost

    private void productButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonAddActionPerformed
        if (!productInputId.getText().trim().equals("Id")) {
            JOptionPane.showMessageDialog(this, "This product's Id is already existed!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (productInputName.getForeground() != Color.BLACK
                || image == null
                || productInputPrice.getForeground() != Color.BLACK
                || productInputDescription.getForeground() != Color.BLACK
                || productInputInventory.getForeground() != Color.BLACK
                || productInputCategory.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "All field must be fulfilled!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (!productInputPrice.getText().trim().matches("^[+-]?\\d+[.]?\\d*$")
                || !productInputInventory.getText().trim().matches("^[+-]?\\d+$")) {
            JOptionPane.showMessageDialog(this, "Some fields are not in the correct format (e.g., price, inventory). Please enter numeric values!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (Double.parseDouble(productInputPrice.getText().trim()) <= 0) {
            JOptionPane.showMessageDialog(this, "Price can't less than or equal to 0!", "Error", JOptionPane.OK_OPTION);
            return;
        }
        if (Integer.parseInt(productInputInventory.getText().trim()) < 0) {
            JOptionPane.showMessageDialog(this, "Inventory must be a positive number!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        productRepository.addProduct(productInputName.getText(),
                image,
                Double.parseDouble(productInputPrice.getText()),
                productInputDescription.getText(),
                Integer.parseInt(productInputInventory.getText()),
                productInputCategory.getSelectedIndex());
        turnOffProduct();
        setProductData(productRepository.getAllProduct());
    }//GEN-LAST:event_productButtonAddActionPerformed

    private void productButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonClearActionPerformed
        turnOffProduct();
    }//GEN-LAST:event_productButtonClearActionPerformed

    private void productButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonDeleteActionPerformed
        if (productInputId.getText().trim().equals("Id")) {
            JOptionPane.showMessageDialog(this, "Select a product before delete", "Error", JOptionPane.OK_OPTION);
            return;
        }
        productRepository.deleteProduct(Integer.parseInt(productInputId.getText()));
        turnOffProduct();
        setProductData(productRepository.getAllProduct());
    }//GEN-LAST:event_productButtonDeleteActionPerformed

    private void productButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonUpdateActionPerformed
        if (productInputId.getText().trim().equals("Id")) {
            JOptionPane.showMessageDialog(this, "Select a product before update", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (productInputName.getForeground() != Color.BLACK
                || productInputPrice.getForeground() != Color.BLACK
                || productInputDescription.getForeground() != Color.BLACK
                || productInputInventory.getForeground() != Color.BLACK
                || productInputCategory.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "All field must be fulfilled!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (!productInputPrice.getText().trim().matches("^[+-]?\\d+[.]?\\d*$")
                || !productInputInventory.getText().trim().matches("^[+-]?\\d+$")) {
            JOptionPane.showMessageDialog(this, "Some fields are not in the correct format (e.g., price, inventory). Please enter numeric values!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (Double.parseDouble(productInputPrice.getText().trim()) <= 0) {
            JOptionPane.showMessageDialog(this, "Price can't less than or equal to 0!", "Error", JOptionPane.OK_OPTION);
            return;
        }
        if (Integer.parseInt(productInputInventory.getText().trim()) <= 0) {
            JOptionPane.showMessageDialog(this, "Inventory mustn't be a negative number!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (image == null) {
            productRepository.updateProductWithoutImage(Integer.parseInt(productInputId.getText()),
                    productInputName.getText(),
                    Double.parseDouble(productInputPrice.getText()),
                    productInputDescription.getText(),
                    Integer.parseInt(productInputInventory.getText()),
                    productInputCategory.getSelectedIndex());
        } else {
            productRepository.updateProduct(Integer.parseInt(productInputId.getText()),
                    productInputName.getText(),
                    image,
                    Double.parseDouble(productInputPrice.getText()),
                    productInputDescription.getText(),
                    Integer.parseInt(productInputInventory.getText()),
                    productInputCategory.getSelectedIndex());
        }
        turnOffProduct();
        setProductData(productRepository.getAllProduct());
    }//GEN-LAST:event_productButtonUpdateActionPerformed

    private void productButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonSearchActionPerformed
        if (productInputName.getForeground() == Color.BLACK) {
            setProductData(productRepository.getAllProductSearchByName(productInputName.getText().trim()));
        } else if (productInputPrice.getForeground() == Color.BLACK) {
            if (!productInputPrice.getText().trim().matches("^[+-]?\\d+[.]?\\d*$")) {
                JOptionPane.showMessageDialog(this, "Price must be a numeric values!", "Error", JOptionPane.OK_OPTION);
                return;
            }
            setProductData(productRepository.getAllProductSearchByPrice(Double.parseDouble(productInputPrice.getText().trim())));
        } else if (productInputCategory.getSelectedIndex() != 0) {
            setProductData(productRepository.getAllProductSearchByCategoryName(productInputCategory.getSelectedItem().toString()));
        } else {
            setProductData(productRepository.getAllProduct());
        }
        turnOffProduct();
    }//GEN-LAST:event_productButtonSearchActionPerformed

    private void feedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackButtonActionPerformed
        FeedbackPanel fp = getSelectedFeedbackPanel();
        if (fp == null) {
            JOptionPane.showMessageDialog(this, "Select a feedback before send response!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        if (feedbackInputResponse.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Type your response text before send response!", "Error", JOptionPane.OK_OPTION);
            return;
        }

        int option = JOptionPane
                .showConfirmDialog(this, "Are you sure you want to response to this feedback?",
                        "Confirm response", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            feedbackRepository.response(fp.getFeedback().getId(), feedbackInputResponse.getText().trim());
            setFeedbackData();
            feedbackInputResponse.setText("");
        }
    }//GEN-LAST:event_feedbackButtonActionPerformed

    private void orderButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonAcceptActionPerformed
        if (orderTableData.getSelectedRow() != -1) {
            int option = JOptionPane
                    .showConfirmDialog(this, "Are you sure you want to accept this order?",
                            "Confirm action", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                orderRepository.acceptOrder((int) orderTableData.getValueAt(orderTableData.getSelectedRow(), 0));
                setOrderData();
            }
        }
    }//GEN-LAST:event_orderButtonAcceptActionPerformed

    private void orderButtonRefuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonRefuseActionPerformed
        if (orderTableData.getSelectedRow() != -1) {
            int option = JOptionPane
                    .showConfirmDialog(this, "Are you sure you want to refuse this order?",
                            "Confirm action", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                orderRepository.refuseOrder((int) orderTableData.getValueAt(orderTableData.getSelectedRow(), 0));
                setOrderData();
            }
        }
    }//GEN-LAST:event_orderButtonRefuseActionPerformed

    // -------------------------------- Hightlight
    public void setColor(JPanel p) {
        p.setBackground(new Color(41, 57, 80));
    }

    public void resetColor(JPanel[] p, JPanel[] indicators) {
        for (JPanel p1 : p) {
            p1.setBackground(new Color(23, 35, 51));
        }
        for (JPanel in : indicators) {
            in.setOpaque(false);
        }
    }

    // -------------------------------- 
    // -------------------------------- General management
    // -------------------------------- 
    public void setGeneralData() {
        int month = YearMonth.now().getMonthValue();
        int year = YearMonth.now().getYear();
        generalHeaderText.setText("STATISTICS AND REPORT IN " + YearMonth.now().getMonth().toString() + " " + year + " (" + month + "/" + year + ")");
        int productSold = productRepository.getProductSoldInMonth(month, year);
        int productGoals = 500;
        double revenue = productRepository.getRevenueInMonth(month, year);
        double revenueGoals = 1000;
        generalProductSold.setText("Sold: " + productSold + " products");
        generalProductGoals.setText("Goals: " + productGoals + " products");
        generalProductProgressBar.setMaximum(productGoals);
        generalProductProgressBar.setValue(productSold);
        generalRevenueReceived.setText("Received: $" + revenue);
        generalRevenueGoals.setText("Goals: $" + revenueGoals);
        generalRevenueProgressBar.setMaximum((int) revenueGoals);
        generalRevenueProgressBar.setValue((int) Math.round(revenue));

        List<Object> mostProduct = productRepository.getMostSoldInMonth(month, year);
        if (mostProduct.size() != 0) {
            detail_id.setText(String.valueOf(((Product) mostProduct.get(0)).getId()));
            detail_name.setText(((Product) mostProduct.get(0)).getName());
            detail_image.setIcon(new ImageIcon(
                    ImageUtils.convertByteToImage(((Product) mostProduct.get(0)).getImage())
                            .getScaledInstance(98, 100, Image.SCALE_SMOOTH)));
            detail_price.setText(String.valueOf(((Product) mostProduct.get(0)).getPrice()));
            detail_category.setText(((Product) mostProduct.get(0)).getCategory().getName());
            detail_sold.setText(mostProduct.get(1).toString());
        }
    }

    // -------------------------------- 
    // -------------------------------- Resource management
    // -------------------------------- 
    public void setImageResourceData() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 2) {
                    return ImageIcon.class;
                }
                return Object.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("No.");
        model.addColumn("Name");
        model.addColumn("Image");
        List<ImageResource> list = resourceRepository.getAllResource();
        for (int i = 0; i < list.size(); i++) {
            model.addRow(new Object[]{
                i + 1,
                list.get(i).getName(),
                new ImageIcon(ImageUtils.convertByteToImage(list.get(i).getImage()).getScaledInstance(75, 50, Image.SCALE_SMOOTH))
            });
        }
        resourceTableData.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        resourceTableData.setDefaultRenderer(Object.class, centerRenderer);
        resourceTableData.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 18));
        resourceTableData.getTableHeader().setBackground(new Color(32, 136, 203));
        resourceTableData.getTableHeader().setForeground(new Color(255, 255, 255));
        resourceTableData.getTableHeader().setReorderingAllowed(false);
        resourceTableData.getTableHeader().setResizingAllowed(false);
        resourceTableData.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        resource_management.requestFocusInWindow();
    }

    // ------------------------------------------- 
    // ------------------------------------------- Product Management
    // ------------------------------------------- 
    public void setProductData(List<Product> list) {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 2) {
                    return ImageIcon.class;
                }
                return Object.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("Id");
        model.addColumn("Name");
        model.addColumn("Image");
        model.addColumn("Price");
        model.addColumn("Description");
        model.addColumn("Inventory");
        model.addColumn("Category");

        for (int i = 0; i < list.size(); i++) {
            model.addRow(new Object[]{
                list.get(i).getId(),
                list.get(i).getName(),
                new ImageIcon(ImageUtils.convertByteToImage(list.get(i).getImage()).getScaledInstance(50, 50, Image.SCALE_SMOOTH)),
                list.get(i).getPrice(),
                list.get(i).getDescription(),
                list.get(i).getInventory(),
                list.get(i).getCategory().getName()
            });
        }
        productTableData.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        productTableData.setDefaultRenderer(Object.class, centerRenderer);
        productTableData.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 10));
        productTableData.getTableHeader().setBackground(new Color(32, 136, 203));
        productTableData.getTableHeader().setForeground(new Color(255, 255, 255));
        productTableData.getTableHeader().setReorderingAllowed(false);
        productTableData.getTableHeader().setResizingAllowed(false);
        productTableData.getColumnModel().getColumn(0).setPreferredWidth(25);
        productTableData.getColumnModel().getColumn(1).setPreferredWidth(50);
        productTableData.getColumnModel().getColumn(2).setPreferredWidth(60);
        productTableData.getColumnModel().getColumn(3).setPreferredWidth(50);
        productTableData.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        productTableData.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (productTableData.getSelectedRow() != -1) {
                productInputId.setText(productTableData.getValueAt(productTableData.getSelectedRow(), 0).toString());
                productInputName.setText(productTableData.getValueAt(productTableData.getSelectedRow(), 1).toString());
                productTextImage2.setIcon((Icon) productTableData.getValueAt(productTableData.getSelectedRow(), 2));
                productInputPrice.setText(productTableData.getValueAt(productTableData.getSelectedRow(), 3).toString());
                productInputDescription.setText(productTableData.getValueAt(productTableData.getSelectedRow(), 4).toString());
                productInputInventory.setText(productTableData.getValueAt(productTableData.getSelectedRow(), 5).toString());
                productInputCategory.setSelectedItem(productTableData.getValueAt(productTableData.getSelectedRow(), 6).toString());
                turnOnProduct();
            }
        });
        product_management.requestFocusInWindow();
    }

    public void turnOnProduct() {
        productInputId.setForeground(Color.BLACK);
        productInputName.setForeground(Color.BLACK);
        productTextImage2.setBackground(Color.WHITE);
        productInputPrice.setForeground(Color.BLACK);
        productInputDescription.setForeground(Color.BLACK);
        productInputInventory.setForeground(Color.BLACK);
    }

    public void turnOffProduct() {
        image = null;
        productInputId.setText("Id");
        productInputName.setText("Name");
        productTextImage2.setIcon(null);
        productInputPrice.setText("Price");
        productInputDescription.setText("Description");
        productInputInventory.setText("Inventory");
        productInputCategory.setSelectedIndex(0);
        productTableData.getSelectionModel().clearSelection();
        productInputId.setForeground(new Color(153, 153, 153));
        productInputName.setForeground(new Color(204, 204, 204));
        productTextImage2.setBackground(new Color(204, 204, 204));
        productInputPrice.setForeground(new Color(204, 204, 204));
        productInputDescription.setForeground(new Color(204, 204, 204));
        productInputInventory.setForeground(new Color(204, 204, 204));
    }

    // ------------------------------------------- 
    // ------------------------------------------- Feedback_Management
    // ------------------------------------------- 
    public void setFeedbackData() {
        feedbackTextPanel.setPreferredSize(new Dimension(630, 350));
        feedbackTextPanel.removeAll();
        feedbackTextPanel.repaint();
        List<Feedback> list = feedbackRepository.getAllFeedback();
        for (Feedback fb : list) {
            FeedbackPanel fp = new FeedbackPanel(fb);
            addMouseListenerToScrollPane(fp);
            feedbackTextPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
            feedbackTextPanel.add(fp);
            feedbackTextPanel.revalidate();
            if (feedbackTextPanel.getComponents().length > 5) {
                feedbackTextPanel.setPreferredSize(new Dimension((int) feedbackTextPanel.getPreferredSize().getWidth(),
                        (int) feedbackTextPanel.getPreferredSize().getHeight() + fp.getHeight() + 6));
            }
        }
    }

    public FeedbackPanel getSelectedFeedbackPanel() {
        FeedbackPanel fp = null;
        for (Component c : feedbackTextPanel.getComponents()) {
            FeedbackPanel f = (FeedbackPanel) c;
            Component viewComponents = ((JScrollPane) (f.getComponent(1))).getViewport().getView();
            if (viewComponents.getBackground() == Color.MAGENTA) {
                fp = f;
            }
        }
        return fp;
    }

    public void addMouseListenerToScrollPane(FeedbackPanel fp) {
        Component view = ((JScrollPane) fp.getComponent(1)).getViewport().getView();
        if (view != null) {
            view.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    if (view.getBackground() == Color.MAGENTA) {
                        view.setBackground(new Color(221, 246, 255));
                    } else {
                        for (Component c : feedbackTextPanel.getComponents()) {
                            FeedbackPanel f = (FeedbackPanel) c;
                            Component viewComponents = ((JScrollPane) (f.getComponent(1))).getViewport().getView();
                            if (viewComponents.getBackground() == Color.MAGENTA) {
                                viewComponents.setBackground(new Color(221, 246, 255));
                            }
                        }
                        view.setBackground(Color.MAGENTA);
                    }
                }
            });
        }
    }

    // ------------------------------------------- 
    // ------------------------------------------- Order_Management
    // ------------------------------------------- 
    public void setOrderData() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("Id");
        model.addColumn("Username");
        model.addColumn("Quantity");
        model.addColumn("Total");
        model.addColumn("OrderDate");
        model.addColumn("Address");
        model.addColumn("Phone");
        List<Order> list = orderRepository.getWaitingOrder();
        for (int i = 0; i < list.size(); i++) {
            model.addRow(new Object[]{
                list.get(i).getId(),
                list.get(i).getAccount().getUsername(),
                list.get(i).getQuantity(),
                list.get(i).getTotal(),
                new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(list.get(i).getOrderDate()),
                list.get(i).getShipping().getAddress(),
                list.get(i).getShipping().getPhone()
            });
        }
        orderTableData.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        orderTableData.setDefaultRenderer(Object.class, centerRenderer);
        orderTableData.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 10));
        orderTableData.getTableHeader().setBackground(new Color(32, 136, 203));
        orderTableData.getTableHeader().setForeground(new Color(255, 255, 255));
        orderTableData.getTableHeader().setReorderingAllowed(false);
        orderTableData.getTableHeader().setResizingAllowed(false);
        orderTableData.getColumnModel().getColumn(0).setPreferredWidth(10);
        orderTableData.getColumnModel().getColumn(1).setPreferredWidth(50);
        orderTableData.getColumnModel().getColumn(2).setPreferredWidth(15);
        orderTableData.getColumnModel().getColumn(3).setPreferredWidth(15);
        orderTableData.getColumnModel().getColumn(6).setPreferredWidth(30);
        orderTableData.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    // -----------------------
    // ----------------------- End set data
    // -----------------------
    /*
    
     */
    public void setFalseComponentInit() {
        product_highlight.setOpaque(false);
        order_highlight.setOpaque(false);
        resource_highlight.setOpaque(false);
        feedback_highlight.setOpaque(false);
        general_highlight.setOpaque(true);
        general_management.setVisible(true);
        resource_management.setVisible(false);
        product_management.setVisible(false);
        feedback_management.setVisible(false);
        order_management.setVisible(false);
        setGeneralData();
        setColor(general);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Side_panel;
    private javax.swing.JLabel detail_category;
    private javax.swing.JLabel detail_id;
    private javax.swing.JLabel detail_image;
    private javax.swing.JLabel detail_name;
    private javax.swing.JLabel detail_price;
    private javax.swing.JLabel detail_sold;
    private javax.swing.JPanel feedback;
    private javax.swing.JButton feedbackButton;
    private javax.swing.JTextArea feedbackInputResponse;
    private javax.swing.JPanel feedbackTextPanel;
    private javax.swing.JPanel feedback_highlight;
    private javax.swing.JLabel feedback_label;
    private javax.swing.JPanel feedback_management;
    private javax.swing.JPanel general;
    private javax.swing.JLabel generalHeaderText;
    private javax.swing.JLabel generalProductGoals;
    private javax.swing.JProgressBar generalProductProgressBar;
    private javax.swing.JLabel generalProductSold;
    private javax.swing.JLabel generalProductTitle;
    private javax.swing.JLabel generalRevenueGoals;
    private javax.swing.JProgressBar generalRevenueProgressBar;
    private javax.swing.JLabel generalRevenueReceived;
    private javax.swing.JLabel generalRevenueTitle;
    private javax.swing.JPanel general_highlight;
    private javax.swing.JLabel general_label;
    private javax.swing.JPanel general_management;
    private javax.swing.JPanel general_management_header;
    private javax.swing.JPanel general_management_most;
    private javax.swing.JPanel general_management_most_detail;
    private javax.swing.JLabel general_management_most_header;
    private javax.swing.JPanel general_management_most_title;
    private javax.swing.JPanel general_management_product;
    private javax.swing.JPanel general_management_revenue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel order;
    private javax.swing.JButton orderButtonAccept;
    private javax.swing.JButton orderButtonRefuse;
    private javax.swing.JTable orderTableData;
    private javax.swing.JPanel order_highlight;
    private javax.swing.JLabel order_label;
    private javax.swing.JPanel order_management;
    private javax.swing.JPanel product;
    private javax.swing.JButton productButtonAdd;
    private javax.swing.JButton productButtonClear;
    private javax.swing.JButton productButtonDelete;
    private javax.swing.JButton productButtonSearch;
    private javax.swing.JButton productButtonUpdate;
    private javax.swing.JComboBox<String> productInputCategory;
    private javax.swing.JTextArea productInputDescription;
    private javax.swing.JTextField productInputId;
    private javax.swing.JButton productInputImage;
    private javax.swing.JTextField productInputInventory;
    private javax.swing.JTextField productInputName;
    private javax.swing.JTextField productInputPrice;
    private javax.swing.JLabel productLineInventory;
    private javax.swing.JLabel productLineName;
    private javax.swing.JLabel productLinePrice;
    private javax.swing.JTable productTableData;
    private javax.swing.JLabel productTextCategory;
    private javax.swing.JLabel productTextImage1;
    private javax.swing.JLabel productTextImage2;
    private javax.swing.JPanel product_highlight;
    private javax.swing.JLabel product_label;
    private javax.swing.JPanel product_management;
    private javax.swing.JPanel product_management_action;
    private javax.swing.JPanel product_management_table;
    private javax.swing.JPanel resource;
    private javax.swing.JButton resourceButtonAdd;
    private javax.swing.JButton resourceButtonDelete;
    private javax.swing.JButton resourceInputFile;
    private javax.swing.JTextField resourceInputName;
    private javax.swing.JTable resourceTableData;
    private javax.swing.JTextField resourceTextFile;
    private javax.swing.JPanel resource_highlight;
    private javax.swing.JLabel resource_label;
    private javax.swing.JPanel resource_management;
    private javax.swing.JPanel resource_management_action;
    private javax.swing.JLabel title_category;
    private javax.swing.JLabel title_id;
    private javax.swing.JLabel title_image;
    private javax.swing.JLabel title_name;
    private javax.swing.JLabel title_price;
    private javax.swing.JLabel title_sold;
    // End of variables declaration//GEN-END:variables
}
